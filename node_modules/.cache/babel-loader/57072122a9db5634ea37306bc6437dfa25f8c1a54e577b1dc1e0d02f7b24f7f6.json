{"ast":null,"code":"import { createContext, createElement, useContext, useReducer } from 'react';\nvar createReducerContext = function (reducer, defaultInitialState) {\n  var context = createContext(undefined);\n  var providerFactory = function (props, children) {\n    return createElement(context.Provider, props, children);\n  };\n  var ReducerProvider = function (_a) {\n    var children = _a.children,\n      initialState = _a.initialState;\n    var state = useReducer(reducer, initialState !== undefined ? initialState : defaultInitialState);\n    return providerFactory({\n      value: state\n    }, children);\n  };\n  var useReducerContext = function () {\n    var state = useContext(context);\n    if (state == null) {\n      throw new Error(\"useReducerContext must be used inside a ReducerProvider.\");\n    }\n    return state;\n  };\n  return [useReducerContext, ReducerProvider, context];\n};\nexport default createReducerContext;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}